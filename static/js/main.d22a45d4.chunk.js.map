{"version":3,"sources":["components/BottomNav/BottomNav.js","core/ImageScanner.js","components/Canvas/Canvas.js","core/Result.js","components/Result/Result.js","containers/App.js","utils/serviceWorker.js","index.js"],"names":["className","ImageScanner","setup","container","image","terminate","x","offsetWidth","y","offsetHeight","scale","mousePressed","sketch","p","preload","background","loadImage","myCanvas","createCanvas","elt","addEventListener","e","preventDefault","parent","imageMode","CENTER","draw","imgWidth","width","imgHeight","height","clear","points","forEach","noStroke","fill","rectMode","rect","mouseX","mouseY","pointIndex","findIndex","px","py","mouseButton","RIGHT","reactRemovePoint","LEFT","isPinning","reactAddPoint","startX","startY","mouseReleased","mouseDragged","diffX","diffY","mouseWheel","delta","windowResized","resizeCanvas","p5instance","p5","setPinning","style","cursor","setAddPoint","func","setRemovePoint","setPoints","project","topLeft","map","d","Math","sqrt","sort","a","b","topRight","bottomLeft","bottomRight","srcCorners","dstCorners","perspT","PerspT","loadPixels","img","createImage","floor","i","j","srcP","transformInverse","color","get","set","updatePixels","remove","this","setImage","setResult","mount","useRef","inputRef","scannerRef","useState","setIsPinning","onImageInput","target","files","reader","FileReader","onload","result","readAsDataURL","addPoint","useCallback","newPoints","length","removePoint","index","splice","useEffect","current","enabled","document","body","key","ref","onClick","click","type","accept","hidden","onChange","UploadIcon","size","Paragraph","textAlign","marginTop","Button","iconAfter","PlusIcon","appearance","intent","marginRight","disabled","PrintIcon","Result","WEBGL","noFill","resultRef","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d22a45d4.chunk.js","sourcesContent":["import React from 'react'\n\nimport './BottomNav.scss'\n\nexport default () => {\n  return <nav className=\"bottom-nav-wrapper\">made by Ian Huang</nav>\n}\n","import p5 from 'p5'\nimport PerspT from 'perspective-transform'\n\nconst POINT_DIAMETER = 10\n\nexport default class ImageScanner {\n  setup = (container, image) => {\n    this.terminate()\n\n    this.container = container\n\n    this.x = container.offsetWidth / 2\n    this.y = container.offsetHeight / 2\n    this.scale = 1\n\n    this.mousePressed = false\n\n    this.sketch = (p) => {\n      if (!image) return\n\n      p.preload = () => {\n        this.background = p.loadImage(image)\n      }\n\n      p.setup = () => {\n        const myCanvas = p.createCanvas(\n          container.offsetWidth,\n          container.offsetHeight\n        )\n\n        myCanvas.elt.addEventListener('contextmenu', (e) => e.preventDefault())\n\n        myCanvas.parent(container)\n        p.imageMode(p.CENTER)\n      }\n\n      p.draw = () => {\n        const imgWidth = this.background.width * this.scale\n        const imgHeight = this.background.height * this.scale\n\n        p.clear()\n        p.image(this.background, this.x, this.y, imgWidth, imgHeight)\n\n        this.points.forEach(({ x, y }) => {\n          p.noStroke()\n          p.fill('#e84a5f')\n          p.rectMode(p.CENTER)\n          p.rect(\n            this.x + x * this.scale - imgWidth / 2,\n            this.y + y * this.scale - imgHeight / 2,\n            POINT_DIAMETER * this.scale,\n            POINT_DIAMETER * this.scale\n          )\n        })\n      }\n\n      p.mousePressed = () => {\n        if (\n          p.mouseX < 0 ||\n          p.mouseX > p.width ||\n          p.mouseY < 0 ||\n          p.mouseY > p.height\n        )\n          return\n        const x = (p.mouseX - this.x) / this.scale + this.background.width / 2\n        const y = (p.mouseY - this.y) / this.scale + this.background.height / 2\n\n        const pointIndex = this.points.findIndex(\n          ({ x: px, y: py }) =>\n            x >= px - (POINT_DIAMETER * this.scale) / 2 &&\n            x <= px + (POINT_DIAMETER * this.scale) / 2 &&\n            y >= py - (POINT_DIAMETER * this.scale) / 2 &&\n            y <= py + (POINT_DIAMETER * this.scale) / 2\n        )\n        if (p.mouseButton === p.RIGHT && pointIndex !== -1) {\n          this.reactRemovePoint(pointIndex)\n        } else if (p.mouseButton === p.LEFT && this.isPinning) {\n          if (\n            x >= 0 &&\n            x <= this.background.width &&\n            y >= 0 &&\n            y <= this.background.height\n          ) {\n            this.reactAddPoint(x, y)\n          }\n        }\n\n        this.startX = p.mouseX\n        this.startY = p.mouseY\n\n        this.mousePressed = true\n      }\n\n      p.mouseReleased = () => {\n        this.mousePressed = false\n      }\n\n      p.mouseDragged = () => {\n        if (this.isPinning || !this.mousePressed) return\n        if (\n          p.mouseX < 0 ||\n          p.mouseX > p.width ||\n          p.mouseY < 0 ||\n          p.mouseY > p.height\n        )\n          return\n        const diffX = this.startX - p.mouseX\n        const diffY = this.startY - p.mouseY\n\n        this.x -= diffX\n        this.y -= diffY\n\n        this.startX = p.mouseX\n        this.startY = p.mouseY\n      }\n\n      p.mouseWheel = (e) => {\n        if (this.isPinning) return\n        if (\n          p.mouseX < 0 ||\n          p.mouseX > p.width ||\n          p.mouseY < 0 ||\n          p.mouseY > p.height\n        )\n          return\n        const { delta } = e\n        this.scale += delta / 1000\n      }\n\n      p.windowResized = () => {\n        p.resizeCanvas(container.offsetWidth, container.offsetHeight)\n      }\n    }\n\n    this.p5instance = new p5(this.sketch)\n  }\n\n  setPinning = (isPinning) => {\n    if (!this.p5instance) return\n\n    this.container.style.cursor = isPinning ? 'crosshair' : 'grab'\n    this.isPinning = isPinning\n  }\n\n  setAddPoint = (func) => (this.reactAddPoint = func)\n\n  setRemovePoint = (func) => (this.reactRemovePoint = func)\n\n  setPoints = (points) => (this.points = points)\n\n  project = () => {\n    // const sortedPoints = this.points.sort(function (a, b) {\n    //   if (a.y === b.y) return a.x - b.x\n    //   return a.y - b.y\n    // })\n    const topLeft = this.points\n      .map((p) => ({\n        d: Math.sqrt(p.x ** 2 + p.y ** 2),\n        p\n      }))\n      .sort((a, b) => a.d - b.d)[0].p\n    const topRight = this.points\n      .map((p) => ({\n        d: Math.sqrt((p.x - this.background.width) ** 2 + p.y ** 2),\n        p\n      }))\n      .sort((a, b) => a.d - b.d)[0].p\n    const bottomLeft = this.points\n      .map((p) => ({\n        d: Math.sqrt(p.x ** 2 + (p.y - this.background.height) ** 2),\n        p\n      }))\n      .sort((a, b) => a.d - b.d)[0].p\n    const bottomRight = this.points\n      .map((p) => ({\n        d: Math.sqrt(\n          (p.x - this.background.width) ** 2 +\n            (p.y - this.background.height) ** 2\n        ),\n        p\n      }))\n      .sort((a, b) => a.d - b.d)[0].p\n\n    const width =\n      (Math.sqrt(\n        (topLeft.x - topRight.x) ** 2 + (topLeft.y - topRight.y) ** 2\n      ) +\n        Math.sqrt(\n          (bottomRight.x - bottomLeft.x) ** 2 +\n            (bottomRight.y - bottomLeft.y) ** 2\n        )) /\n      2\n    const height =\n      (Math.sqrt(\n        (topLeft.x - bottomLeft.x) ** 2 + (topLeft.y - bottomLeft.y) ** 2\n      ) +\n        Math.sqrt(\n          (bottomRight.x - topRight.x) ** 2 + (bottomRight.y - topRight.y) ** 2\n        )) /\n      2\n\n    const srcCorners = [\n      topLeft.x,\n      topLeft.y,\n      topRight.x,\n      topRight.y,\n      bottomRight.x,\n      bottomRight.y,\n      bottomLeft.x,\n      bottomLeft.y\n    ]\n    const dstCorners = [0, 0, width, 0, width, height, 0, height]\n\n    const perspT = PerspT(srcCorners, dstCorners)\n\n    this.background.loadPixels()\n    const img = this.p5instance.createImage(\n      Math.floor(width),\n      Math.floor(height)\n    )\n    img.loadPixels()\n\n    for (let i = 0; i < img.width; i++) {\n      for (let j = 0; j < img.height; j++) {\n        const srcP = perspT.transformInverse(i, j)\n        const color = this.background.get(srcP[0], srcP[1])\n        img.set(i, j, color)\n      }\n    }\n\n    img.updatePixels()\n\n    return img\n  }\n\n  terminate = () => {\n    if (this.p5instance) {\n      this.p5instance.remove()\n    }\n  }\n\n  get enabled() {\n    return !!this.p5instance\n  }\n}\n","import {\n  Button,\n  Paragraph,\n  PlusIcon,\n  PrintIcon,\n  UploadIcon\n} from 'evergreen-ui'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\n\nimport ImageScanner from '../../core/ImageScanner'\n\nimport './Canvas.scss'\n\nconst MAX_POINTS = 4\n\nexport default ({ image, setImage, setResult }) => {\n  const mount = useRef(null)\n  const inputRef = useRef(null)\n  const scannerRef = useRef(new ImageScanner())\n  const [isPinning, setIsPinning] = useState(false)\n  const [points, setPoints] = useState([])\n\n  const onImageInput = async (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const reader = new FileReader()\n\n      reader.onload = function (e) {\n        setImage(() => e.target.result)\n      }\n\n      reader.readAsDataURL(e.target.files[0])\n    }\n  }\n\n  const addPoint = useCallback(\n    (x, y) => {\n      const newPoints = [...points, { x, y }]\n      setPoints(() => newPoints)\n\n      if (newPoints.length === MAX_POINTS) {\n        setIsPinning(false)\n      }\n    },\n    [points]\n  )\n\n  const removePoint = useCallback(\n    (index) => {\n      const newPoints = [...points]\n      newPoints.splice(index, 1)\n      setPoints(() => newPoints)\n      setIsPinning(true)\n    },\n    [points]\n  )\n\n  useEffect(() => {\n    if (!scannerRef.current.enabled && image)\n      scannerRef.current.setup(mount.current, image)\n  }, [mount, image])\n\n  useEffect(() => {\n    scannerRef.current.setAddPoint(addPoint)\n  }, [addPoint])\n\n  useEffect(() => {\n    scannerRef.current.setRemovePoint(removePoint)\n  }, [removePoint])\n\n  useEffect(() => {\n    scannerRef.current.setPoints(points)\n  }, [points])\n\n  useEffect(() => {\n    scannerRef.current.setPinning(isPinning)\n  }, [image, isPinning])\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') setIsPinning(false)\n    })\n  })\n\n  return (\n    <div className=\"canvas-wrapper\">\n      <div\n        className=\"canvas-main\"\n        ref={mount}\n        onClick={() => {\n          if (image) return\n          inputRef.current.click()\n        }}\n      >\n        <input\n          ref={inputRef}\n          type=\"file\"\n          accept=\"image/png, image/jpeg\"\n          hidden\n          onChange={onImageInput}\n        />\n        {!scannerRef.current.enabled && (\n          <>\n            <UploadIcon size={100} color=\"#dbe2ef77\" />\n            <Paragraph color=\"#959ba577\" textAlign=\"center\" marginTop={10}>\n              Click to upload image\n            </Paragraph>\n          </>\n        )}\n      </div>\n      <div className=\"canvas-toolbox\">\n        <Button\n          iconAfter={PlusIcon}\n          appearance=\"primary\"\n          intent=\"success\"\n          marginRight={8}\n          disabled={!image || points.length === MAX_POINTS}\n          height={40}\n          onClick={() => setIsPinning(!isPinning)}\n        >\n          {isPinning && MAX_POINTS !== points.length ? (\n            <span>Pinning... ({MAX_POINTS - points.length})</span>\n          ) : (\n            <span>Pin Points ({MAX_POINTS - points.length})</span>\n          )}\n        </Button>\n        <Button\n          appearance=\"primary\"\n          intent=\"danger\"\n          disabled={points.length !== MAX_POINTS}\n          height={40}\n          iconAfter={PrintIcon}\n          onClick={() => setResult(scannerRef.current.project())}\n        >\n          Flatten\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import p5 from 'p5'\n\nexport default class Result {\n  setup = (container, image) => {\n    this.terminate()\n\n    this.x = 0\n    this.y = 0\n    this.scale = 1\n    this.background = image\n\n    this.mousePressed = false\n\n    this.sketch = (p) => {\n      if (!image) return\n\n      this.background = image\n\n      p.setup = () => {\n        const myCanvas = p.createCanvas(\n          container.offsetWidth,\n          container.offsetHeight,\n          p.WEBGL\n        )\n\n        myCanvas.parent(container)\n        p.imageMode(p.CENTER)\n        p.noFill()\n      }\n\n      p.draw = () => {\n        if (!this.background) return\n\n        p.clear()\n        p.image(\n          this.background,\n          this.x,\n          this.y,\n          this.background.width * this.scale,\n          this.background.height * this.scale\n        )\n      }\n\n      p.mousePressed = () => {\n        if (\n          p.mouseX < 0 ||\n          p.mouseX > p.width ||\n          p.mouseY < 0 ||\n          p.mouseY > p.height\n        )\n          return\n\n        this.startX = p.mouseX\n        this.startY = p.mouseY\n\n        this.mousePressed = true\n      }\n\n      p.mouseReleased = () => {\n        this.mousePressed = false\n      }\n\n      p.mouseDragged = () => {\n        if (!this.mousePressed) return\n        if (\n          p.mouseX < 0 ||\n          p.mouseX > p.width ||\n          p.mouseY < 0 ||\n          p.mouseY > p.height\n        )\n          return\n\n        const diffX = this.startX - p.mouseX\n        const diffY = this.startY - p.mouseY\n\n        this.x -= diffX\n        this.y -= diffY\n\n        this.startX = p.mouseX\n        this.startY = p.mouseY\n      }\n\n      p.mouseWheel = (e) => {\n        if (\n          p.mouseX < 0 ||\n          p.mouseX > p.width ||\n          p.mouseY < 0 ||\n          p.mouseY > p.height\n        )\n          return\n        const { delta } = e\n        this.scale += delta / 1000\n      }\n\n      p.windowResized = () => {\n        p.resizeCanvas(container.offsetWidth, container.offsetHeight)\n      }\n    }\n\n    this.p5instance = new p5(this.sketch)\n  }\n\n  terminate = () => {\n    if (this.p5instance) {\n      this.p5instance.remove()\n    }\n  }\n}\n","import React, { useEffect, useRef } from 'react'\n\nimport Result from '../../core/Result'\n\nimport './Result.scss'\n\nexport default ({ result }) => {\n  const mount = useRef(null)\n  const resultRef = useRef(new Result())\n\n  useEffect(() => {\n    if (result) resultRef.current.setup(mount.current, result)\n  }, [mount, result])\n\n  return (\n    <div className=\"result-wrapper\">\n      <div className=\"result-main\" ref={mount} />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport './App.scss'\n\nimport BottomNav from '../components/BottomNav/BottomNav'\nimport Canvas from '../components/Canvas/Canvas'\nimport Result from '../components/Result/Result'\n\nfunction App() {\n  const [image, setImage] = useState('')\n  const [result, setResult] = useState(null)\n\n  return (\n    <div className=\"app-wrapper\">\n      <div className=\"app-content\">\n        <Canvas image={image} setImage={setImage} setResult={setResult} />\n        <Result result={result} />\n      </div>\n      <BottomNav />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './containers/App'\nimport * as serviceWorker from './utils/serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}